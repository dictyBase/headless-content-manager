// @generated by protoc-gen-connect-es v1.3.0
// @generated from file dictybase/identity/identity.proto (package dictybase.identity, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateIdentityReq, Identity, IdentityProviderReq } from "./identity_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";
import { ExistResponse, HealthzIdRequest, IdRequest } from "../api/jsonapi/request_pb.js";

/**
 * The content service definition
 *
 * @generated from service dictybase.identity.IdentityService
 */
export const IdentityService = {
  typeName: "dictybase.identity.IdentityService",
  methods: {
    /**
     * Gets the specified identity
     *
     * @generated from rpc dictybase.identity.IdentityService.GetIdentityFromProvider
     */
    getIdentityFromProvider: {
      name: "GetIdentityFromProvider",
      I: IdentityProviderReq,
      O: Identity,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc dictybase.identity.IdentityService.GetIdentity
     */
    getIdentity: {
      name: "GetIdentity",
      I: IdRequest,
      O: Identity,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc dictybase.identity.IdentityService.ExistProviderIdentity
     */
    existProviderIdentity: {
      name: "ExistProviderIdentity",
      I: IdentityProviderReq,
      O: ExistResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create a new identity
     *
     * @generated from rpc dictybase.identity.IdentityService.CreateIdentity
     */
    createIdentity: {
      name: "CreateIdentity",
      I: CreateIdentityReq,
      O: Identity,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an existing identity
     *
     * @generated from rpc dictybase.identity.IdentityService.DeleteIdentity
     */
    deleteIdentity: {
      name: "DeleteIdentity",
      I: IdRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Basic health check that always return success
     *
     * @generated from rpc dictybase.identity.IdentityService.Healthz
     */
    healthz: {
      name: "Healthz",
      I: HealthzIdRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
};

