// @generated by protoc-gen-connect-es v1.3.0
// @generated from file dictybase/content/content.proto (package dictybase.content, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Content, ContentIdRequest, ContentRequest, StoreContentRequest, UpdateContentRequest } from "./content_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";
import { HealthzIdRequest } from "../api/jsonapi/request_pb.js";

/**
 * The content service definition
 *
 * @generated from service dictybase.content.ContentService
 */
export const ContentService = {
  typeName: "dictybase.content.ContentService",
  methods: {
    /**
     * Gets the content of specified page(slug)
     *
     * @generated from rpc dictybase.content.ContentService.GetContentBySlug
     */
    getContentBySlug: {
      name: "GetContentBySlug",
      I: ContentRequest,
      O: Content,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc dictybase.content.ContentService.GetContent
     */
    getContent: {
      name: "GetContent",
      I: ContentIdRequest,
      O: Content,
      kind: MethodKind.Unary,
    },
    /**
     * Store the content of a new page(slug)
     *
     * @generated from rpc dictybase.content.ContentService.StoreContent
     */
    storeContent: {
      name: "StoreContent",
      I: StoreContentRequest,
      O: Content,
      kind: MethodKind.Unary,
    },
    /**
     * Update the content of an existing page
     *
     * @generated from rpc dictybase.content.ContentService.UpdateContent
     */
    updateContent: {
      name: "UpdateContent",
      I: UpdateContentRequest,
      O: Content,
      kind: MethodKind.Unary,
    },
    /**
     * Delete an existing page along with its content
     *
     * @generated from rpc dictybase.content.ContentService.DeleteContent
     */
    deleteContent: {
      name: "DeleteContent",
      I: ContentIdRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * Basic health check that always return success
     *
     * @generated from rpc dictybase.content.ContentService.Healthz
     */
    healthz: {
      name: "Healthz",
      I: HealthzIdRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
};

