// @generated by protoc-gen-es v1.6.0
// @generated from file dictybase/api/upload/file.proto (package dictybase.api.upload, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * FileUploadRequest defines requests parameters for uploading
 * a file through protocol buffer. The file is expected to be uploaded
 * grpc client side streaming
 *
 * @generated from message dictybase.api.upload.FileUploadRequest
 */
export declare class FileUploadRequest extends Message<FileUploadRequest> {
  /**
   * name of the file
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * content of the file, expected to be streamed in chunk
   *
   * @generated from field: bytes content = 2;
   */
  content: Uint8Array;

  constructor(data?: PartialMessage<FileUploadRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "dictybase.api.upload.FileUploadRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileUploadRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileUploadRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileUploadRequest;

  static equals(a: FileUploadRequest | PlainMessage<FileUploadRequest> | undefined, b: FileUploadRequest | PlainMessage<FileUploadRequest> | undefined): boolean;
}

/**
 * FileUploadResponse defines response received after completion of
 * file upload
 *
 * @generated from message dictybase.api.upload.FileUploadResponse
 */
export declare class FileUploadResponse extends Message<FileUploadResponse> {
  /**
   * Status gives the status after file upload
   *
   * @generated from field: dictybase.api.upload.FileUploadResponse.Status status = 1;
   */
  status: FileUploadResponse_Status;

  /**
   * message send by the server after file upload
   *
   * @generated from field: string msg = 2;
   */
  msg: string;

  constructor(data?: PartialMessage<FileUploadResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "dictybase.api.upload.FileUploadResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FileUploadResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FileUploadResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FileUploadResponse;

  static equals(a: FileUploadResponse | PlainMessage<FileUploadResponse> | undefined, b: FileUploadResponse | PlainMessage<FileUploadResponse> | undefined): boolean;
}

/**
 * @generated from enum dictybase.api.upload.FileUploadResponse.Status
 */
export declare enum FileUploadResponse_Status {
  /**
   * a new file
   *
   * @generated from enum value: CREATED = 0;
   */
  CREATED = 0,

  /**
   * an existing file
   *
   * @generated from enum value: UPDATED = 1;
   */
  UPDATED = 1,
}

